'''
Project Euler Problem 45:

Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

Triangle	 	T_n=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	P_n=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	H_n=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T_285 = P_165 = H_143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
'''

def get_triang(n):
    #return the nth triangular number
    Tn = int(n*(n+1)/2)
    return Tn

def get_pentag(n):
    #return the nth pentagonal number
    Pn = int(n*((3*n)-1)/2)
    return Pn

def get_hexag(n):
    #return the nth hexagonal number
    Hn = int(n*((2*n)-1))
    return Hn

def main(m):
    #m is the number beyond which we are looking for a match
    triangs = [1]
    tcount = 1
    pents = [1]
    pcount = 1
    hexags = [1]
    hcount = 1
    matches = [1]
    while matches[-1] <= m:
        smallest = min(triangs[-1], pents[-1], hexags[-1])
        if triangs[-1] == smallest:
            tcount += 1
            triangs.append(get_triang(tcount))
        if pents[-1] == smallest:
            pcount += 1
            pents.append(get_pentag(pcount))
        if hexags[-1] == smallest:
            hcount += 1
            hexags.append(get_hexag(hcount))
        if triangs[-1] == pents[-1] and triangs[-1] == hexags[-1]:
            matches.append(triangs[-1])
    return matches[-1]
    

print("Problem 45 solution: " + str(main(40755)))
