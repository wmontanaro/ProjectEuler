'''
Project Euler Problem 2:

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
'''

def fibonacci_seq_to_n(n):
    if n < 2:
        print("Input must be at least 2.")
        return []
    sequence = [1, 2]
    while sequence[-1] < n:
        new_term = sequence[-1] + sequence[-2]
        if new_term <= n:
            sequence.append(new_term)
        else:
            break
    return sequence
    
def add_even_fibs_to_n(n):
    fibs = fibonacci_seq_to_n(n)
    total = 0
    for item in fibs:
        if item % 2 == 0:
            total += item
    return total

print("Problem 2 solution: " + str(add_even_fibs_to_n(4000000)))
